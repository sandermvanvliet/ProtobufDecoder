<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:ProtobufDecoder.Application.Avalonia.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:s="clr-namespace:ProtobufDecoder.Application.Avalonia"
        xmlns:converters="clr-namespace:ProtobufDecoder.Application.Avalonia.Converters"
        xmlns:protobufDecoder="clr-namespace:ProtobufDecoder;assembly=ProtobufDecoder"
        mc:Ignorable="d"
        x:Class="ProtobufDecoder.Application.Avalonia.Views.MainWindow"
        Title="{Binding Path=Model.WindowTitle}"
        Height="600"
        Width="1200"
        DataContextChanged="StyledElement_OnDataContextChanged">

    <Design.DataContext>
        <vm:MainWindowViewModel/>
    </Design.DataContext>
    <Window.Resources>
        <converters:ProtobufTagConverter x:Key="ProtobufTagConverter" />
        <converters:ProtobufMessageConverter x:Key="GeneratedProtoConverter" />
    </Window.Resources> 
    <Window.KeyBindings>
        <KeyBinding Command="{Binding Path=OpenFileCommand}" Gesture="Ctrl+O" />
        <KeyBinding Command="{Binding Path=SaveGeneratedProtoCommand}" Gesture="Ctrl+S" />
        <KeyBinding Command="{Binding Path=CopyTagValueCommand}" Gesture="Ctrl+C"
                    CommandParameter="{Binding ElementName=TagsTreeView}"/>
        <KeyBinding Command="{Binding Path=DecodeTagCommand}" Gesture="Ctrl+D"
                    CommandParameter="{Binding ElementName=TagsTreeView}"/>
    </Window.KeyBindings>
    <DockPanel>
        <Menu DockPanel.Dock="Top" Margin="0,0,0,0" Height="22"
              Background="#eeeeee">
            <MenuItem Header="{x:Static s:Strings.MenuFile}">
                <MenuItem Header="{x:Static s:Strings.MenuFileOpen}" Name="OpenFileMenuItem" Command="{Binding Path=OpenFileCommand}" InputGesture="Ctrl+O" />
                <Separator />
                <MenuItem Header="{x:Static s:Strings.MenuFileSaveGeneratedProto}" Name="SaveGeneratedProto"
                          Command="{Binding Path=SaveGeneratedProtoCommand}" InputGesture="Ctrl+S"/>
                <MenuItem Header="{x:Static s:Strings.MenuFileSaveGeneratedProtoAs}" Name="SaveGeneratedProtoAs"
                              Command="{Binding Path=SaveGeneratedProtoAsCommand}" />
                <Separator />
                <MenuItem Header="{x:Static s:Strings.MenuFileExit}" Name="ExitMenuItem" Click="ExitMenuItem_OnClick" InputGesture="Alt+F4" />
            </MenuItem>
            <MenuItem Header="{x:Static s:Strings.MenuHelp}">
                <MenuItem Header="{x:Static s:Strings.MenuHelpAbout}" Name="AboutMenuItem" Click="AboutMenuItem_OnClick" />
            </MenuItem>
        </Menu>
        <StackPanel Orientation="Horizontal" 
                        Background="{Binding Path=Model.StatusBarBackground,FallbackValue={x:Static Brushes.DodgerBlue}}"
                        DockPanel.Dock="Bottom" 
                        Height="22" 
                        VerticalAlignment="Center" 
                        Margin="0,0,0,0">
            <TextBlock Margin="6,4,0,0" 
                       Text="{Binding Path=Model.StatusBarText, FallbackValue={x:Static s:Strings.StatusBarReadyText},TargetNullValue={x:Static s:Strings.StatusBarReadyText}}"
                       Foreground="{Binding Path=Model.StatusBarForeground,FallbackValue={x:Static Brushes.White}}"
                       FontSize="12"/>
        </StackPanel>
        <Grid Margin="0,0,0,0"
              HorizontalAlignment="Stretch"
              Background="#eeeeee">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="580" />
                <ColumnDefinition Width="300" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0"
                    Background="White"
                    BorderThickness="1"
                    BorderBrush="Gray" 
                    Margin="4,0,0,0">
                <TextBlock Text="No HEX yet..."/>
            </Border>
            <!--<hex:HexEditor Name="HexEditor"
                           Grid.Column="0"
                           ReadOnlyMode="True"
                           AllowDrop="False"
                           ByteGrouping="EightByte"
                           DefaultCopyToClipboardMode="CSharpCode"
                           Stream="{Binding Path=Model.InputFileByteStream}"
                           AllowCustomBackgroundBlock="True"
                           AllowZoom="False"
                           AllowAutoHighLightSelectionByte="False"
                           Margin="4,0,0,0" />-->
            <Grid VerticalAlignment="Stretch"
                  Grid.Column="1"
                  Margin="4,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="300" />
                </Grid.RowDefinitions>
                <TreeView x:Name="TagsTreeView"
                          SelectionChanged="TagsTreeView_OnSelectedItemChanged"
                          Items="{Binding Path=Model.Message.Tags}"
                          VerticalAlignment="Stretch"
                          Grid.Row="0"
                          BorderThickness="1"
                          BorderBrush="Gray"
                          SelectionMode="Single"
                          Background="White"
                          FontSize="12">
                    <TreeView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="{x:Static s:Strings.ContextMenuDecodeTag}" x:Name="DecodeTagMenuItem"
                                      Command="{Binding Path=DecodeTagCommand}"
                                      CommandParameter="{Binding ElementName=TagsTreeView}"
                                      InputGesture="Ctrl+D" />
                            <MenuItem Header="{x:Static s:Strings.ContextMenuCopyValue}" x:Name="CopyValueAsBytes" 
                                      Command="{Binding Path=CopyTagValueCommand}" 
                                      CommandParameter="{Binding ElementName=TagsTreeView}"
                                      InputGesture="Ctrl+C" />
                        </ContextMenu>
                    </TreeView.ContextMenu>
                    <TreeView.DataTemplates>
                        <DataTemplate
                            DataType="{x:Type protobufDecoder:ProtobufTagSingle}">
                            <TextBlock Text="{Binding Path=Name}"
                                       Padding="0"
                                       Margin="0"/>
                        </DataTemplate>

                        <TreeDataTemplate  DataType="{x:Type protobufDecoder:ProtobufTagRepeated}"
                                           ItemsSource="{Binding Path=Items}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=Name}" />
                                <TextBlock Text="{x:Static s:Strings.TagRepeated}" Margin="4, 0, 0, 0" />
                            </StackPanel>
                        </TreeDataTemplate>

                        <TreeDataTemplate  DataType="{x:Type protobufDecoder:ProtobufTagEmbeddedMessage}"
                                           ItemsSource="{Binding Path=Tags}">
                            <TextBlock Text="{Binding Path=Name}" />
                        </TreeDataTemplate>
                    </TreeView.DataTemplates>
                    <TreeView.Styles>
                        <Style Selector="TextBlock">
                            <Setter Property="FontSize" Value="12"/>
                        </Style>
                        <Style Selector="TreeViewItem">
                            <Setter Property="MinHeight" Value="20" />
                        </Style>
                    </TreeView.Styles>
                </TreeView>
                <Border BorderBrush="{DynamicResource ButtonBorderBrush}"
                        BorderThickness="0.5"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Margin="0,4,0,0"
                        Grid.Row="1"
                        Background="White">
                    <TextBox x:Name="GeneratedProtoTextBlock"
                             Text="{Binding Model.Message, Converter={StaticResource GeneratedProtoConverter},Mode=OneWay}"
                             IsReadOnly="True"
                             FontSize="12" />
                </Border>
            </Grid>
            <Border
                Grid.Column="2"
                Margin="4,0,4,0"
                BorderThickness="1"
                BorderBrush="Gray"
                Background="White">
                <DataGrid Name="TagPropertiesListBox"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          Items="{Binding ElementName=TagsTreeView, Path=SelectedItem, Converter={StaticResource ProtobufTagConverter},Mode=OneWay}"
                          AutoGenerateColumns="False"
                          ColumnHeaderHeight="24">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="{x:Static s:Strings.TagPropertiesName}" 
                                            Width="100"
                                            Binding="{Binding Path=Name}" />
                        <DataGridTextColumn Header="{x:Static s:Strings.TagPropertiesValue}"
                                            Binding="{Binding Path=Value}" />
                    </DataGrid.Columns>
                    <DataGrid.Styles>
                        <Style Selector="TextBlock">
                            <Setter Property="FontSize" Value="12"/>
                        </Style>
                        <Style Selector="DataGridColumnHeader">
                            <Setter Property="MinHeight" Value="24" />
                        </Style>
                    </DataGrid.Styles>
                </DataGrid>
            </Border>
        </Grid>
    </DockPanel>
</Window>
